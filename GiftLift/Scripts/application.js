// Generated by CoffeeScript 1.7.1
(function() {
  var Gift, ViewModel, initialData,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  initialData = [
    {
      Title: 'Tall Hat',
      Price: 49.95
    }, {
      Title: 'Long Cloak',
      Price: 78.25
    }
  ];

  Gift = (function() {
    function Gift(title, price) {
      if (title == null) {
        title = '';
      }
      if (price == null) {
        price = '';
      }
      this.Title = ko.observable(title);
      this.Price = ko.observable(price);
    }

    return Gift;

  })();

  ViewModel = (function() {
    function ViewModel() {
      this.save = __bind(this.save, this);
      this.stopEditing = __bind(this.stopEditing, this);
      this.editItem = __bind(this.editItem, this);
      this.deleteGift = __bind(this.deleteGift, this);
      this.addGift = __bind(this.addGift, this);
      this.gifts = ko.observableArray(initialData);
      this.selectedGift = ko.observable();
      this.editing = ko.observable(false);
    }

    ViewModel.prototype.addGift = function() {
      return this.gifts.push(new Gift());
    };

    ViewModel.prototype.deleteGift = function(gift) {
      return this.gifts.remove(gift);
    };

    ViewModel.prototype.editItem = function(gift) {
      this.selectedGift(gift);
      return this.editing(true);
    };

    ViewModel.prototype.stopEditing = function() {
      return this.editing(false);
    };

    ViewModel.prototype.save = function() {
      if ($("form").valid()) {
        return $.post(location.href, {
          gifts: ko.toJSON(this.gifts)
        }, function(response) {
          return toastr.success("" + response.count + " item(s) saved!");
        });
      }
    };

    return ViewModel;

  })();

  $(function() {
    ko.applyBindings(new ViewModel());
    return $('form').validate({
      ignore: []
    });
  });

}).call(this);

//# sourceMappingURL=application.js.map